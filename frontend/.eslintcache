[{"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\index.js":"1","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\App.js":"2","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\startseite\\Startseite.js":"3","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\Apotheke.js":"4","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\BenutzerTable.js":"5","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\BTMTable.js":"6","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\AerzteTable.js":"7","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\LieferantenTable.js":"8","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\services\\AuthorizationService.js":"9","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\modals\\ApothekeRegisterModal.js":"10","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\services\\ApothekeService.js":"11","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\modals\\ApothekeEditModal.js":"12","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\modals\\useForm.js":"13","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\startseite\\Login.js":"14","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\headers\\Header.js":"15","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\btmbuch\\BTMBuch.js":"16","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\headers\\StatusHeader.js":"17","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\ApothekenDetails.js":"18","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\user\\UserDetails.js":"19","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\ApothekeBtmList.js":"20","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\btmbuch\\BuchungTabelle.js":"21","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\btmbuch\\NeueBuchungModal.js":"22"},{"size":280,"mtime":1607458621577,"results":"23","hashOfConfig":"24"},{"size":856,"mtime":1607464626845,"results":"25","hashOfConfig":"24"},{"size":291,"mtime":1607461884754,"results":"26","hashOfConfig":"24"},{"size":836,"mtime":1607458621569,"results":"27","hashOfConfig":"24"},{"size":1429,"mtime":1607458621571,"results":"28","hashOfConfig":"24"},{"size":1192,"mtime":1607458621571,"results":"29","hashOfConfig":"24"},{"size":1105,"mtime":1607458621568,"results":"30","hashOfConfig":"24"},{"size":1147,"mtime":1607458621572,"results":"31","hashOfConfig":"24"},{"size":798,"mtime":1607458621582,"results":"32","hashOfConfig":"24"},{"size":5394,"mtime":1607458621579,"results":"33","hashOfConfig":"24"},{"size":1002,"mtime":1607458621581,"results":"34","hashOfConfig":"24"},{"size":4130,"mtime":1607458621578,"results":"35","hashOfConfig":"24"},{"size":716,"mtime":1607458621580,"results":"36","hashOfConfig":"24"},{"size":1808,"mtime":1607465511373,"results":"37","hashOfConfig":"24"},{"size":206,"mtime":1607460216353,"results":"38","hashOfConfig":"24"},{"size":2222,"mtime":1607465813687,"results":"39","hashOfConfig":"24"},{"size":542,"mtime":1607460216354,"results":"40","hashOfConfig":"24"},{"size":1440,"mtime":1607464869887,"results":"41","hashOfConfig":"24"},{"size":1186,"mtime":1607463393579,"results":"42","hashOfConfig":"24"},{"size":1524,"mtime":1607465710244,"results":"43","hashOfConfig":"24"},{"size":2685,"mtime":1607460216349,"results":"44","hashOfConfig":"24"},{"size":10503,"mtime":1607460216351,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1d2vijs",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\index.js",[],["96","97"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\App.js",["98"],"import React from 'react';\r\nimport './App.scss';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Startseite from './components/startseite/Startseite';\r\nimport BTMBuch from './components/btmbuch/BTMBuch';\r\nimport { SnackbarProvider } from 'notistack';\r\nrequire('dotenv').config()\r\n\r\n// library.add(fab, faCheckSquare, faBookMedical)\r\n\r\nfunction App() {\r\n  return (\r\n  <React.Fragment>\r\n    <SnackbarProvider maxSnack={10} anchorOrigin={{vertical:'bottom', horizontal:'center'}}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Startseite} />\r\n          <Route path=\"/login\" exact component={Startseite} />\r\n          <Route path=\"/apotheke/:id\" exact component={BTMBuch} />\r\n        </Switch>\r\n      </Router>\r\n    </SnackbarProvider>\r\n  </React.Fragment>);\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\startseite\\Startseite.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\Apotheke.js",[],["99","100"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\BenutzerTable.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\BTMTable.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\AerzteTable.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\LieferantenTable.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\services\\AuthorizationService.js",[],["101","102"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\modals\\ApothekeRegisterModal.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\services\\ApothekeService.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\modals\\ApothekeEditModal.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\modals\\useForm.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\startseite\\Login.js",["103"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\headers\\Header.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\btmbuch\\BTMBuch.js",["104","105","106"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\headers\\StatusHeader.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\ApothekenDetails.js",["107","108","109"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\user\\UserDetails.js",["110","111","112"],"import React from 'react'\r\nimport { Button, Col, Row, Form } from 'react-bootstrap';\r\n\r\nfunction UserDetails(props) {\r\n    //eslint disable-next-line\r\n   const {rolle, vorname, name, nutzername, aktiv} = props.user;\r\n\r\n   var allRoles = {\r\n       ADMIN : { 0: \"Admin\", 1 : \"Pruefer\", 2: \"Benutzer\"},\r\n       PRUEFER : { 0 : \"Pruefer\", 1: \"Benutzer\"},\r\n       BENUTZER : { 0: \"Benutzer\"}\r\n   }\r\n\r\n   const logout = () => {\r\n       window.sessionStorage.removeItem(\"edbapo-jwt\")\r\n       props.history.push('/');\r\n   }\r\n\r\n   return(\r\n       <Row>\r\n           <Col><b>Nutzername:</b> {nutzername}</Col>\r\n           <Col>\r\n               <Form.Control as=\"select\" onChange={(event) => props.setAktiveRolle(event.target.value.toUpperCase())}>\r\n                   {Object.keys(allRoles[rolle]).map( role => <option key={allRoles[rolle][role]} value={allRoles[rolle][role]}>{allRoles[rolle][role]}</option>)}\r\n               </Form.Control>\r\n           </Col>\r\n           <Col>\r\n               <Button>Einstellungen</Button>\r\n           </Col>\r\n           <Col>\r\n               <Button onClick={logout}>Logout</Button>\r\n           </Col>\r\n       </Row>\r\n   )\r\n}\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\apotheke\\ApothekeBtmList.js",["113"],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\btmbuch\\BuchungTabelle.js",[],"C:\\Users\\Public\\EDB\\EDB-Apo\\frontend\\src\\components\\btmbuch\\NeueBuchungModal.js",["114","115"],"import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nfunction NeueBuchungModal(props) {\r\n    \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [typ, setTyp] = useState('');\r\n    const [lieferanten, setLieferanten] = useState([]);\r\n    const [aerzte, setAerzte] = useState([]);\r\n    const [empfaenger, setEmpfaenger] = useState([]);\r\n\r\n    const sendNewBuchungAnfrage = async (buchungData) => {\r\n        const response = await fetch(`http://${process.env.REACT_APP_BACKEND_HOSTNAME}/apotheke/${props.apothekeId}/btmbuchung`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + window.sessionStorage.getItem(\"edbapo-jwt\"),\r\n            },\r\n            body: JSON.stringify(buchungData)\r\n        }).catch((err) => {\r\n            //SHOW ERROR\r\n            console.log(err);\r\n        });\r\n\r\n\r\n        if (response && response.status === 201) {\r\n            const data = await response.json();\r\n            // console.log(data);\r\n            hideModal();\r\n            enqueueSnackbar('Buchung erfolgreich angelegt', { variant:'success', autoHideDuration: 3000} );\r\n            props.apothekeRefFunctions.updateBtmList();\r\n        } else {\r\n            //SHOW ERROR\r\n            console.log(response);\r\n        }\r\n    }\r\n\r\n    const createNewBuchung = event => {\r\n        event.preventDefault();\r\n        if (typ.toLowerCase() === 'zugang') {\r\n            let { anforderungsschein, btmMenge, lieferant, pruefdatum } = event.target;\r\n            let buchungData = {\r\n                benutzer: props.user.id,\r\n                btm: props.btm.btm.id,\r\n                menge: btmMenge.value,\r\n                typ: 'ZUGANG',\r\n                lieferant: lieferant.value,\r\n                anforderungsschein: anforderungsschein.value,\r\n                pruefdatum: pruefdatum.value\r\n            }\r\n            sendNewBuchungAnfrage(buchungData);\r\n        } else if (typ.toLowerCase() === 'abgang') {\r\n            let { btmMenge, rezept, empfaenger, arzt, pruefdatum } = event.target;\r\n            let buchungData = {\r\n                benutzer: props.user.id,\r\n                btm: props.btm.btm.id,\r\n                menge: btmMenge.value,\r\n                typ: 'ABGANG',\r\n                empfaenger: empfaenger.value,\r\n                arzt: arzt.value,\r\n                rezept: rezept.value,\r\n                pruefdatum: pruefdatum.value\r\n            }\r\n            sendNewBuchungAnfrage(buchungData);\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setTyp('');\r\n        props.onHide();\r\n    }\r\n\r\n\r\n    const loadLieferanten = async () => {\r\n        const response = await fetch(`http://${process.env.REACT_APP_BACKEND_HOSTNAME}/apotheke/${props.apothekeId}/lieferant`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + window.sessionStorage.getItem(\"edbapo-jwt\"),\r\n            }\r\n        }).catch((err) => {\r\n            //SHOW ERROR\r\n            console.log(err);\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            setLieferanten(await response.json());\r\n            console.log(lieferanten);\r\n        } else if (response.status === 403) {\r\n            // props.history.push('/forbidden');\r\n        } else if (response.status === 400) {\r\n            // props.history.push('/badrequest');\r\n        }\r\n    }\r\n\r\n    const loadAerzte = async () => {\r\n        const response = await fetch(`http://${process.env.REACT_APP_BACKEND_HOSTNAME}/apotheke/${props.apothekeId}/arzt`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + window.sessionStorage.getItem(\"edbapo-jwt\"),\r\n            }\r\n        }).catch((err) => {\r\n            //SHOW ERROR\r\n            console.log(err);\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            setAerzte(await response.json());\r\n        } else if (response.status === 403) {\r\n            // props.history.push('/forbidden');\r\n        } else if (response.status === 400) {\r\n            // props.history.push('/badrequest');\r\n        }\r\n    }\r\n\r\n    const loadEmpfaenger = async () => {\r\n        const response = await fetch(`http://${process.env.REACT_APP_BACKEND_HOSTNAME}/apotheke/${props.apothekeId}/empfaenger`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + window.sessionStorage.getItem(\"edbapo-jwt\"),\r\n            }\r\n        }).catch((err) => {\r\n            //SHOW ERROR\r\n            console.log(err);\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            setEmpfaenger(await response.json());\r\n        } else if (response.status === 403) {\r\n            // props.history.push('/forbidden');\r\n        } else if (response.status === 400) {\r\n            // props.history.push('/badrequest');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadLieferanten();\r\n        loadAerzte();\r\n        loadEmpfaenger();\r\n    }, []);\r\n\r\n    const renderZugang = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Group as={Row} controlId=\"anforderungsschein\">\r\n                    <Form.Label column sm=\"2\">\r\n                        Anforderungsschein\r\n                        </Form.Label>\r\n                    <Col sm=\"10\">\r\n                        <Form.Control name=\"anforderungsschein\" type=\"text\" required />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"lieferant\">\r\n                    <Form.Label column sm=\"2\">\r\n                        Lieferant\r\n                        </Form.Label>\r\n                    <Col sm=\"10\">\r\n                        <Form.Control name=\"lieferant\" required as=\"select\">\r\n                            {lieferanten.map(l => <option key={l.id} value={l.id}>{l.name}</option>)}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n            </React.Fragment>)\r\n    }\r\n\r\n    const renderAbgang = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Group as={Row} controlId=\"empfaenger\">\r\n                    <Form.Label column sm=\"2\">\r\n                        Empfaenger\r\n                </Form.Label>\r\n                    <Col sm=\"10\">\r\n                        <Form.Control name=\"empfaenger\" required as=\"select\">\r\n                            {empfaenger.map(e => <option key={e.id} value={e.id}>{e.name}</option>)}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"arzt\">\r\n                    <Form.Label column sm=\"2\">\r\n                        Arzt\r\n                </Form.Label>\r\n                    <Col sm=\"10\">\r\n                        <Form.Control name=\"arzt\" required as=\"select\">\r\n                            {aerzte.map(a => <option key={a.id} value={a.id}>{a.name}</option>)}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"rezept\">\r\n                    <Form.Label column sm=\"2\">\r\n                        Rezept\r\n                        </Form.Label>\r\n                    <Col sm=\"10\">\r\n                        <Form.Control name=\"rezept\" type=\"text\" required />\r\n                    </Col>\r\n                </Form.Group>\r\n            </React.Fragment>)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onExiting={hideModal}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Betäubungsmittel-Buchung hinzufügen\r\n                 </Modal.Title>\r\n            </Modal.Header>\r\n            <Form onSubmit={createNewBuchung}>\r\n                <Modal.Body>\r\n                    <Form.Group as={Row} controlId=\"Typ\">\r\n                        <Col sm={{ span: 10, offset: 2 }}>\r\n                            <Row sm={6}>\r\n                                <Form.Check required\r\n                                    type=\"radio\"\r\n                                    label=\"Zugang\"\r\n                                    name=\"TypRadio\"\r\n                                    id=\"ZugangRadio\"\r\n                                    onClick={() => setTyp('zugang')}\r\n                                />\r\n                                <Form.Check required\r\n                                    type=\"radio\"\r\n                                    label=\"Abgang\"\r\n                                    name=\"TypRadio\"\r\n                                    id=\"AbgangRadio\"\r\n                                    onClick={() => setTyp('abgang')}\r\n                                />\r\n                            </Row>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"btmMenge\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Menge\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control name=\"btmMenge\" type=\"number\" min=\"1\" defaultValue=\"0\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"pruefdatum\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Prüfdatum\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control name=\"pruefdatum\" type=\"date\" defaultValue={new Date()} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    {typ.toLowerCase() === 'zugang' ? renderZugang() : null}\r\n                    {typ.toLowerCase() === 'abgang' ? renderAbgang() : null}\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={hideModal}>Close</Button>\r\n                    <Button variant=\"primary\" type=\"submit\">Bestätigen</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n\r\n\r\n\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default NeueBuchungModal;",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":50,"nodeType":"122","messageId":"123","endLine":3,"endColumn":54},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"116","replacedBy":"126"},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","severity":1,"message":"128","line":2,"column":9,"nodeType":"122","messageId":"123","endLine":2,"endColumn":12},{"ruleId":"120","severity":1,"message":"129","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":23},{"ruleId":"120","severity":1,"message":"130","line":12,"column":22,"nodeType":"122","messageId":"123","endLine":12,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":43,"column":6,"nodeType":"133","endLine":43,"endColumn":8,"suggestions":"134"},{"ruleId":"120","severity":1,"message":"135","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"136","line":7,"column":9,"nodeType":"122","messageId":"123","endLine":7,"endColumn":26},{"ruleId":"131","severity":1,"message":"137","line":32,"column":6,"nodeType":"133","endLine":32,"endColumn":8,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"139","line":6,"column":18,"nodeType":"122","messageId":"123","endLine":6,"endColumn":25},{"ruleId":"120","severity":1,"message":"140","line":6,"column":27,"nodeType":"122","messageId":"123","endLine":6,"endColumn":31},{"ruleId":"120","severity":1,"message":"141","line":6,"column":45,"nodeType":"122","messageId":"123","endLine":6,"endColumn":50},{"ruleId":"131","severity":1,"message":"142","line":43,"column":6,"nodeType":"133","endLine":43,"endColumn":8,"suggestions":"143"},{"ruleId":"120","severity":1,"message":"144","line":28,"column":19,"nodeType":"122","messageId":"123","endLine":28,"endColumn":23},{"ruleId":"131","severity":1,"message":"145","line":143,"column":8,"nodeType":"133","endLine":143,"endColumn":10,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["147"],["148"],["147"],["148"],"'Row' is defined but never used.","'ApothekeBtmList' is defined but never used.","'setApothekeId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'Fragment' is defined but never used.","'neuesBtmModalShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getApothekeData'. Either include it or remove the dependency array.",["150"],"'vorname' is assigned a value but never used.","'name' is assigned a value but never used.","'aktiv' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBtms'. Either include it or remove the dependency array.",["151"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAerzte', 'loadEmpfaenger', and 'loadLieferanten'. Either include them or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [getUserDetails]",{"range":"161","text":"162"},"Update the dependencies array to be: [getApothekeData]",{"range":"163","text":"164"},"Update the dependencies array to be: [getBtms]",{"range":"165","text":"166"},"Update the dependencies array to be: [loadAerzte, loadEmpfaenger, loadLieferanten]",{"range":"167","text":"168"},[1494,1496],"[getUserDetails]",[1023,1025],"[getApothekeData]",[1212,1214],"[getBtms]",[5227,5229],"[loadAerzte, loadEmpfaenger, loadLieferanten]"]